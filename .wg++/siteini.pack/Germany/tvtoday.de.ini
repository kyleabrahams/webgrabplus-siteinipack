**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: tvtoday.de
* @MinSWversion: V5.0.1.1
* @Revision 19 - [12/06/2022] Japangelo
* @Revision 18 - [25/10/2018] Mat8861 *speed-up & fixes
* @Revision 17 - [24/07/2016] Willy De Wilde
*  - new website
* @Revision 16 - [24/07/2016] Blackbear199
*  - subtitle fix
* @Revision 15 - [12/07/2016] Blackbear199
*  - partial rewrite,changed url_index,alot code from Christoph21x original ini reused
* @Revision 14 - [25/05/2016] Blackbear199
*   Change start/stop to use unix times,set timezone to UTC
* @Remarks:  overlapping shows on regional channels     
* @header_end
**------------------------------------------------------------------------------------------------
site {url=tvtoday.de|timezone=UTC|maxdays=12.1|cultureinfo=de-DE|charset=UTF-8|titlematchfactor=90|ratingsystem=FSK|episodesystem=onscreen}
*
global_temp_3.modify {set|'config_site_id'}
url_index {url|https://www.tvtoday.de/programm/standard/sender/|channel|.html}
url_index.headers {customheader=Accept-Encoding=gzip,deflate,br}
*
scope.range {(splitindex)|end}
index_showsplit.scrub {single|<div class="tv-show-container js-tv-show-container">|||</section>}
loop {(each "index_temp_9" in 'index_showsplit')|end}
index_temp_8.modify {substring(type=regex)|'index_temp_9' "(href=\".+?<\/a>)"}
index_temp_7.modify {replace|\||#_#}
index_temp_7.modify {addend|'index_temp_8'#_#}
end_loop
index_showsplit.modify {substring(type=regex)|'index_temp_7' "(.*?)#_#"}
*index_showsplit.modify {remove(type=regex)|"^.*h7\sname\">NI:.+$"}          *add the regional shows to remove
*index_showsplit.modify {remove(type=regex)|"^.*h7\sname\">MV:.+$"}
*index_showsplit.modify {remove(type=regex)|"^.*h7\sname\">HH:.+$"}
*index_showsplit.modify {remove(type=regex)|"^.*h7\sname\">SH:.+$"}
*index_showsplit.modify {remove(type=regex)|"^.*h7\sname\">BW:.+$"}
*index_showsplit.modify {remove(type=regex)|"^.*h7\sname\">HB:.+$"}
*index_showsplit.modify {remove(type=regex)|"^.*h7\sname\">RP:.+$"}
*index_showsplit.modify {remove(type=regex)|"^.*h7\sname\">SR:.+$"}
index_showsplit.modify {sort(ascending,string)}
sort_by.scrub {single(target="index_showsplit")|data-start-time="||"|"}
sort_by.modify {calculate(target="index_showsplit" format=date,unix)}
end_scope
*
index_urlchannellogo.modify {addstart|https://images.tvtoday.de/sender/small/'global_temp_3'.png}
*
scope.range {(indexshowdetails)|end}
index_start.scrub {single|data-start-time="||"|"}
index_stop.scrub {single|data-end-time="||"|"}
index_title.scrub {single|<p class="h7 name">||</p>|</p>}
index_category.scrub {regex||name">[^<]*<\/p><p\sclass="small-meta\sdescription">([^,]*),||}
index_country.scrub {regex||name">[^<]*<\/p><p\sclass="small-meta\sdescription">[^,]*,(.+?)\d{4}||}
index_country.modify {replace|/|\|}
index_country.modify {substring(type=element)|0 2}
index_temp_4.scrub {single|<p class="small-meta description">||</p>|</p>}
index_subtitle.scrub {regex||<p\sclass="small-meta description">([^<]*)<\/p><\/*div||}
index_productiondate.modify {calculate(format=productiondate)|'index_temp_4'}
index_subtitle.modify {clear(~ 'index_productiondate')}
index_starrating.scrub {single|data-rating="||"|"}
index_starrating.modify {addend(not "")|/3}
index_urlshow {url|https://www.tvtoday.de|href="||"|"}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate,br}
end_scope
*
scope.range {(showdetails)|end}
title.modify {addstart|'index_title'}
titleoriginal.scrub {single|Originaltitel</div>|>|</div>|</div>}
titleoriginal.modify {clear(~ 'title')}
description.scrub {multi|<p class="main-copy">||</p>|</p>}
description.modify {remove(type=regex)|<div class="banner-container">.*$}
description.modify {cleanup(tags="<"">")}
description.modify {cleanup}
description.modify {remove|(Senderinfo)}
showicon.scrub {regex||<meta\sproperty="og:image"\s+content="([^"]*)"\/>||}
director.scrub {single(separator=", " max=2)|Regisseur</div>|>|</div>|</div>}
actor.scrub {multi|Darsteller</h3>|||<div class="additional-buttons">}
temp_9.modify {substring(type=regex)|'actor' "(<div\sclass=\"cell\">[^\/]*.+?[^\/]*.+?[^\/]*\/div>)"}
loop {(each "temp_8" in 'temp_9')|end}
temp_7.modify {substring(type=regex)|'temp_8' "class=\"cell\">([^<]*)<\/div>\s+<div\s"}
temp_6.modify {substring(type=regex)|'temp_8' "class=\"cell\">([^<]*)<\/div>\s+<\/div>"}
temp_7.modify {addend('temp_6' not "")|(role='temp_6')}
temp_5.modify {replace|\||#_#}
temp_5.modify {addend('temp_7' not "")|'temp_7'#_#}
end_loop
actor.modify {substring(type=regex)|'temp_5' "(.+?)#_#"}
actor.modify {substring(type=element)|0 10}
composer.scrub {single(separator=", " max=2)|Musik</div>|>|</div>|</div>}
rating.scrub {single|Altersfreigabe</div>|>|</div>|</div>}
rating.modify{replace|6 Jahre|FSK 6}
rating.modify{replace|12 Jahre|FSK 12}
rating.modify{replace|14 Jahre|FSK 14}
rating.modify{replace|16 Jahre|FSK 16}
rating.modify{replace|18 Jahre|FSK 18}
temp_1.scrub {regex||(St\.\s\d+,\sFolge\s\d+\/\d+)||}
episode.modify {set(pattern="St. 'S1', Folge'E1'/'Et1'")|'temp_1'}
end_scope
*
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index {url|https://www.tvtoday.de/programm/standard/sender/}
*url_index.headers {customheader=Accept-Encoding=gzip,deflate,br}
*
*scope.range {(channellist)|end}
*index_site_id.scrub {multi|<div class="container mediathek">|/programm/standard/sender/|.html|<div class="col-4">}
*index_site_channel.scrub {multi|<div class="container mediathek">|title="|"|<div class="col-4">}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
