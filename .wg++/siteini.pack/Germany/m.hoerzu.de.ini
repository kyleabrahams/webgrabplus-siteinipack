**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: m.hoerzu.de
* @MinSWversion: 3.1
* @Revision 0 - [27/03/2022] Mat8861 /Blackbear199
*   - creation
* @Remarks:  max 3 days
* @header_end
**------------------------------------------------------------------------------------------------

site {url=m.hoerzu.de|timezone=Europe/Berlin|maxdays=3.1|cultureinfo=de-DE|charset=UTF-8|titlematchfactor=90|allowlastdayoverflow}
scope.range{(urlindex)|end}
urldate.format {datestring|dd.MM.yyyy}
url_index{url|https://m.hoerzu.de/tv-programm/|channel|/}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}     * to speedup the downloading of the index pages
url_index.headers {customheader=X-Requested-With=XMLHttpRequest}
end_scope
*
index_urlchannellogo {url||<img class="logo-desktop"|src="|"|</div>}
*

scope.range{(splitindex)|end}
index_showsplit.scrub {multi|<tbody>|<tr>|</tr>|</tbody>}
index_showsplit.modify {remove(type=regex)|\!\?\?\!}
*index_showsplit.modify{(debug)}
end_scope
*
scope.range{(indexshowdetails)|end}
index_start.scrub {regex||>\s+(\d{2}:\d{2})\s+bis\s+\d{2}:\d{2}\s+<||}
index_title.scrub {single|<td data-label="Sendung"|<strong>|</strong>|</strong>}
index_title.modify {cleanup(tags="<"">")} 
index_episode.scrub {single(pattern="Staffel:'S1' Folge:'E1'""Staffel:'S1'""Folge:'E1'" include="Folge")|<small>|(|)|</small>}
index_episode.modify {remove(type=regex)|\!\?\?\!}
index_urlshow {url|https://www.hoerzu.de|href="||">|">}
index_urlshow.modify{addend(not"")|?type=modal}
index_urlshow.headers {customheader=X-Requested-With=XMLHttpRequest}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}
end_scope
*
title.scrub {single|<h1|>|</h1>|</h1>}
title.modify {cleanup(tags="<"">")}
showicon.scrub{single(include=first)|<picture class="a-image"|srcset="|"|</picture>}
showicon.modify{cleanup(style=jsondecode)}
subtitle.scrub {single(separator="," include=last)|<h3 class="a-headline p-epg-modal__descriptionSubHeadline|>|</h3>|</h3>}
subtitle.modify{remove(type=regex)|.+?Folge\s\d+}
description.scrub {single|<p><strong>Beschreibung</strong></p>|<p>|</p>|</div>}
temp_8.scrub{single|<div class="a-copy a-copy--medium p-epg-modal__description"|>|</div>|</div>}
description.modify{addend('description' "")|'temp_8'}
description.modify {cleanup(tags="<"">")}
category.scrub{single(separator=" • " include=first)|<div class="o-epg_stage__series-info">||</div>|</div>}
productiondate.scrub{single|<div class="o-epg_stage__series-info">||</div>|</div>}
country.modify {single(separator=" • " include=2)|<div class="o-epg_stage__series-info">||</div>|</div>}
country.modify {remove|'productiondate'}
actor.scrub{multi(max=8)|<ul class="m-accordion__list"><li class="m-accordion__item"><span data-uk-icon="Stars"></span>|<div class="hide-xs"><strong>|</strong>|</ul>}
actor.modify {replace|</li>|\|}
actor.modify {cleanup(tags="<"">")} 
temp_3.scrub{multi(max=8)|<ul class="m-accordion__list"><li class="m-accordion__item"><span data-uk-icon="Stars"></span>|<div class="m-accordion__only-name">|</div></div></div>|</ul>}
temp_3.modify {replace|</li>|\|}
temp_3.modify {cleanup(tags="<"">")} 
temp_4.modify {set|0} 
loop{(each "temp_5" in 'actor')|end} 
temp_6.modify {substring(type=element)|'temp_3' 'temp_4' 1} 
temp_6.modify {addstart(not "")|(role=} 
temp_6.modify {addend(~ "role=")|)} 
temp_7.modify {addend|'temp_5''temp_6'##} 
temp_4.modify {calculate(format=F0)|1 +} 
end_loop 
actor.modify {set|'temp_7'} 
actor.modify {replace|##|\|}
actor.modify {cleanup}
director.scrub{multi(max=2)|<strong>Regie:</strong></div>|<div class="m-accordion__only-name">|</div></div></div>|</div></div></div>}
writer.scrub {multi(max=2)|<strong>Drehbuch:</strong>|<div class="m-accordion__only-name">|</div></div></div>|</div></div></div>}
composer.scrub{multi(max=2)|<strong>Musik:</strong>|<div class="m-accordion__only-name">|</div></div></div>|</div></div></div>}
composer.scrub{multi(max=2)|<strong>Musik:</strong>|<div class="m-accordion__only-name">|</div></div></div>|</div></div></div>}
title.modify{addstart("")|'index_title'}
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index {url|https://m.hoerzu.de/tv-sender/}
*index_site_channel.scrub {multi|<div id="channel-modal" class="filter-select-modal" uk-modal>|<li class="o-epg-filter__item">|</li>|</ul></div></div></div>}
*index_site_channel.modify {cleanup(tags="<"">")}
*index_site_id.scrub {multi|<div id="channel-modal" class="filter-select-modal" uk-modal>|<li class="o-epg-filter__item"><a class="o-epg-filter__link" href="/tv-programm/|/">|</ul></div></div></div>}
*scope.range {(channellist)|end}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
