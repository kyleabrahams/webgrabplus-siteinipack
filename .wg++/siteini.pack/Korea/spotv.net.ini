**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: spotv.net
* @MinSWversion: V3.1
* @Revision 0 - [22/05/2022] Blackbear199
*  - creation
* @Remarks: set timezone= to users local timezone
* @header_end
**------------------------------------------------------------------------------------------------
site {url=spotv.net|timezone=Asia/Seoul|maxdays=7|cultureinfo=ko-KR|charset=UTF-8|titlematchfactor=90}
site {ratingsystem=KR|episodesystem=onscreen}
*
url_index {url|https://spotv.net/data/json/schedule/##channel##/Daily/D|urldate|.json}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
*
scope.range {(urlindex)|end}
global_temp_1.modify {substring(type=regex)|'config_site_id' "^([^#]*)"}
global_temp_2.modify {substring(type=regex)|'config_site_id' "##([^#]*)$"}
url_index.modify {replace|##channel##|'global_temp_1'}
end_scope
*
urldate.format {datestring|yyyyMMdd}
*
index_urlchannellogo.modify {set|https://spotv.net/images/calendar_'global_temp_2'.png}
*
index_showsplit.scrub {multi(separator="},{")|[{||}]|}]}
scope.range {(splitindex)|end}
index_showsplit.modify {cleanup(style=unidecode)}
index_showsplit.modify {cleanup(style=jsondecode)}
*index_showsplit.modify {(debug)}
end_scope
*
index_start.scrub {single|"sch_date":"||","title"|","title"}
index_title.scrub {regex||"title":"(.*?)"$||}
index_temp_1.scrub {single(include="LIVE")|"kind":"||",|",}
*
index_start.modify {replace|","sch_hour":| }
index_start.modify {replace|,"sch_min":"|:}
index_title.modify {cleanup(tags="[""]")}
index_title.modify {addstart('index_temp_1' not "")|살다: }
index_category.modify {set|스포츠}
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index {url|https://spotv.net/schedule/schedule_01.asp}
*index_site_id.scrub {multi|<ul class="list_logo">||</ul>|</ul>}
*scope.range {(channellist)|end}
*index_site_id.modify {cleanup(tags="<!--""-->")}
*index_site_channel.modify {substring(type=regex)|'index_site_id' "src=\"\.\.\/images\/calendar_(.*?)\.png\""}
*index_site_id.modify {substring(type=regex)|"\(\'(.*?)\.png"}
*index_site_id.modify {replace|');"><img src="../images/calendar_|##}
*index_site_id.modify {cleanup(removeduplicates link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
