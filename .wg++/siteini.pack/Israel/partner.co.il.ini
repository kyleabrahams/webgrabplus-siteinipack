﻿**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: partner.co.il
* @MinSWversion: V2.1
* @Revision 1 - [20/08/2018] Blackbear199
*  - adjust all times to UTC
*  - add required lang header
* @Revision 0 - [24/11/2017] Blackbear199
*  - creation
* @Remarks:
*
* @header_end
**------------------------------------------------------------------------------------------------
site {url=partner.co.il|timezone=UTC|maxdays=7.1|cultureinfo=he-IL|charset=UTF-8|titlematchfactor=90|keepindexpage}
site {ratingsystem=IL|episodesystem=onscreen}
*
url_index                  {url|https://my.partner.co.il/TV.Services/MyTvSrv.svc/SeaChange/GetEpg}
url_index.headers          {method=POST}
url_index.headers          {accept=application/json, text/plain, */*}
url_index.headers          {contenttype=application/json;charset=UTF-8}
url_index.headers          {postdata={"_keys":["param"],"_values":["post data"],"param":"post data"}}
url_index.headers          {customheader=brand=orange}
url_index.headers          {customheader=category=TV}
url_index.headers          {customheader=platform=WEB}
url_index.headers          {customheader=subCategory=EPG}
url_index.headers          {customheader=lang=he-il}
url_index.headers          {customheader=Accept-Encoding=gzip,deflate,br}
*
urldate.format             {daycounter|0}
*
index_urlchannellogo.scrub {regex||\{"id":"'global_temp_1'",.+?"logoUrl":"(.+?)",||}
index_urlchannellogo.modify{cleanup(style=jsondecode)}
*
global_temp_1.modify       {set|'config_site_id'}
index_showsplit.scrub      {regex||\{"id":"'global_temp_1'",.+?"events":\[(?:.*?)(?:(\{.+?\})(?:.*?))*\]||}
index_showsplit.modify     {cleanup(style=jsondecode)}
*index_showsplit.modify    {(debug)}
*
index_temp_1.scrub         {single|"id":"||",|",}
index_urlshow.modify       {addstart('index_temp_1' not "")|https://my.partner.co.il/TV.Services/MyTvSrv.svc/SeaChange/GetEventTitleBO}
index_urlshow.headers      {method=POST}
index_urlshow.headers      {accept=application/json, text/plain, */*}
index_urlshow.headers      {contenttype=application/json;charset=UTF-8}
index_urlshow.headers      {postdata={"_keys":["eventId"],"_values":["'index_temp_1'"],"eventId":"'index_temp_1'"}}
index_urlshow.headers      {customheader=brand=orange}
index_urlshow.headers      {customheader=category=TV}
index_urlshow.headers      {customheader=platform=WEB}
index_urlshow.headers      {customheader=subCategory=EPG}
index_urlshow.headers      {customheader=lang=he-il}
index_urlshow.headers      {customheader=Accept-Encoding=gzip,deflate,br}
*
index_start.scrub          {single|"start":"||",|",}
index_stop.scrub           {single|"end":"||",|",}
index_title.scrub          {single|"name":"||",|",}
*
scope.range                {(indexshowdetails)|end}
index_temp_2.modify        {calculate(format=date,zzz)|'now'}
index_temp_3.modify        {substring(type=char)|'index_temp_2' 0 1}
index_temp_2.modify        {remove(type=char)|0 1}
index_start.modify         {calculate('index_temp_3' "-" format=date,unix)|'index_start' 00:'index_temp_2' +}
index_start.modify         {calculate('index_temp_3' "+" format=date,unix)|'index_start' 00:'index_temp_2' -}
index_stop.modify          {calculate('index_temp_3' "-" format=date,unix)|'index_stop' 00:'index_temp_2' +}
index_stop.modify          {calculate('index_temp_3' "+" format=date,unix)|'index_stop' 00:'index_temp_2' -}
end_scope
*
*all elements except title,description and category are untested.they exist in the page data but no channels were found to have any actual values.scrubs are a guess.
title.scrub                {single|"name":"||",|",}
description.scrub          {single|"shortSynopsis":"||",|",}
director.scrub             {multi|"directors":[|"name":"|"|]}
actor.scrub                {multi|"actors":[|"name":"|"|]}
producer.scrub             {multi|"producers":[|"name":"|"|]}
writer.scrub               {multi|"writers":[|"name":"|"|]}
category.scrub             {multi|"genres":[|"name":"|"|]}
productiondate.scrub       {single|"productionDate":||}|}}
*showicon.scrub            {single|"posterPictureUrl":"||",|",} *cannot determine correct lead string
*
title.modify               {cleanup(style=jsondecode)}
description.modify         {cleanup(style=jsondecode)}
description.modify         {remove(type=regex)|"(\\)\.$"}
category.modify            {cleanup(style=jsondecode)}
category.modify            {cleanup(style=name)}
director.modify            {cleanup(style=jsondecode)}
producer.modify            {cleanup(style=jsondecode)}
writer.modify              {cleanup(style=jsondecode)}
actor.modify               {cleanup(style=jsondecode)}
*showicon.modify           {addstart(not "")|https://partner.co.il/TV/images}
*showicon.modify           {cleanup(style=jsondecode)}
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*index_site_id.scrub     {regex||\{"id":"(\d+)","name":"[^"]*","channelNumber"||}
*index_site_channel.scrub{regex||\{"id":"\d+","name":"([^"]*)","channelNumber"||}
*index_site_id.modify    {cleanup(removeduplicates link="index_site_channel")}
** @auto_xml_channel_end
