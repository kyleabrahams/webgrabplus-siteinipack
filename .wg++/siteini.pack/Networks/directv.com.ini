**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: directv.com
* @MinSWversion: V3.1
* @Revision 19 - [28/01/2023] Blackbear199
* 	- subdetail elements fix
* @Revision 18 - [24/06/2020] Blackbear199
* 	- added php due to site issues
* @Revision 17 - [08/04/2018] Blackbear199
* 	- another attempt to fix what was tried in Revision 15
*   - add channel logo
* @Revision 16 - [30/12/2017] Blackbear199
* 	- subdetail fix,starrating fix
* @Revision 15 - [14/06/2017] Blackbear199
* 	- fixed correct channel data not being selected when same channel number used for multiple feeds
* @Revision 14 - [09/06/2017] Blackbear199
* 	- added links for use with mono version >= 5.0.1.1(requires no server/php script)
*   - fixed cookie problem with php script method
* @Remarks: 1. goto https://www.directv.com/guide
*           2. enter a valid zipcode(example 10001 is New York)
*           3. export a cookie file(i use Edit This Cookie extension on chrome).name the cookie file directv.com.cookies.txt
*              cookie needs to be in netscape format. In Edit This Cookie,Settings-->Options and at the bottom select Netscape HTTP Cookie file.
*           4. copy it to the same folder as your webgrab config xml
*           5. <update>c</update>,run webgrab.channel list for the zipcode you used will be created in your webgrab config folder.
* @header_end
**------------------------------------------------------------------------------------------------
site {url=directv.com|timezone=UTC|maxdays=13|cultureinfo=en-US|charset=UTF-8|titlematchfactor=90|allowlastdayoverflow}
site {ratingsystem=MPAA|episodesystem=onscreen|loadcookie=directv.com.cookies.txt}
*
url_index                  {url|https://www.directv.com/json/channelschedule?channels=##chnum##&startTime=|urldate|%20|subpage|:00:00%20GMT&hours=12}
url_index.headers          {customheader=Accept-Encoding=gzip,deflate,br}
*
urldate.format             {datestring|ddd"%20"MMM"%20"dd"%20"yyyy}
subpage.format             {list|06|18}
*
scope.range                {(urlindex)|end}
global_temp_1.modify       {substring(type=regex)|'config_site_id' "^(\d+)#_#"}
url_index.modify           {replace|##chnum##|'global_temp_1'}
end_scope
*
scope.range                {(datelogo)|3}
index_urlchannellogo.scrub {single|"chLogoId":||,|,}
index_urlchannellogo.modify{set(not "0")|https://www.directv.com/dtvassets/dtv/teamsite/images/logos/channels/dark/medium/'index_urlchannellogo'.png}
index_urlchannellogo.modify{set("0")|https://www.directv.com/img/ent/global/missing_channel_logo.png}
*
global_temp_2.modify       {substring(type=regex)|'config_site_id' "#_#(\d+)$"}
index_showsplit.scrub      {regex||(?:\{"schedule":\[)?\{"secLiveStreaming":"[^"]*","chNum":'global_temp_1',"authCode":"[^"]*","chRec":(?:true\|false),"chCall":"[^"]*","chId":'global_temp_2',.+?"schedules":\[(\{.+?\})(?:\],"chKey":\|\]\})||}
scope.range                {(splitindex)|end}
index_showsplit.modify     {replace|\},\{|\}\|\{}
index_temp_1.modify        {substring(type=regex)|'index_showsplit' "\"airTime\":\"([^\"]*)\""}
index_temp_1.modify        {cleanup(removeduplicates link="index_showsplit")}
*index_showsplit.modify    {(debug)}
end_scope
*
index_temp_1.scrub         {regex||"programID":"(.*?)",||}
index_temp_1.modify        {clear("-1")}
index_temp_1.modify        {clear(~ "_")}
*
index_urlshow.modify       {addstart('index_temp_1' not "")|https://www.directv.com/json/program/flip/'index_temp_1'}
index_urlshow.headers      {customheader=Accept-Encoding=gzip,deflate,br}
*
index_start.scrub          {regex||"airTime":"(\d{4}-\d{1,2}-\d{1,2}T\d{1,2}:\d{1,2}:\d{1,2})(?:\.\d+[+-]\d{4})?"||}
index_duration.scrub       {single|"duration":||,|,}
index_title.scrub          {single|"title":"||",|",}
index_category.scrub       {single(separator="," exclude="Movies Anywhere")|"subcategoryList":[||]|]}
*
index_title.modify         {remove(type=regex)|"\s\([^\)]*\)$"}
index_category.modify      {remove|"}
index_showicon.modify      {set|'index_urlchannellogo'} *use channel logo as showicons links broken
*
title.modify               {addstart|'index_title'}
subtitle.scrub             {regex||"episodeTitle":"(.*?)","||}
description.scrub          {regex||"description":"(.*?)","||}
*
temp_2.scrub               {regex||"episodeNumber":([^,]*),"||}
temp_2.modify              {clear("0")}
temp_2.modify              {addstart(not "")|E}
temp_3.scrub               {regex||"episodeSeason":([^,]*),"||} *season
temp_3.modify              {clear("0")}
temp_3.modify              {addstart(not "")|S}
temp_3.modify              {addend|'temp_2'}
episode.modify             {addstart(pattern="S'S1'E'E1'""S'S1'""E'E1'")|'temp_3'}
*
starrating.scrub           {regex||"starRating":"(.*?)","||}
rating.scrub               {single(separator=" (" include=first)|"rating":"||",|",}
productiondate.scrub       {regex||"releaseYear":"(\d{4})","||}
productiondate.scrub       {regex||"originalAirDate":"(\d{4})-\d{2}-\d{2}","||}
*
rating.modify              {cleanup(style=jsondecode)}
description.modify         {cleanup(style=jsondecode)}
*
temp_4.modify              {calculate('starrating' not "" format=F0 type=char)|'starrating' "*" #}
temp_4.modify              {calculate(not "" format=F1)|2 *}
starrating.modify          {set('temp_4' not "")|'temp_4'}
starrating.modify          {addend(not "")|/10}
*
urlsubdetail               {url|https://www.directv.com|"detailsLinkUrl":"||",|",}
urlsubdetail.headers       {customheader=Accept-Encoding=gzip,deflate,br}
*
subdetail_director.scrub   {multi(max=2 include=">Director <")|Cast & Crew<|<li |</li>|</ul>}
subdetail_producer.scrub   {multi(max=2 include=">Producer <")|Cast & Crew<|<li |</li>|</ul>}
subdetail_actor.scrub      {multi(max=5 exclude=">Director <"">Producer <")|Cast & Crew<|<li |</li>|</ul>}
*
subdetail_director.modify  {substring(type=regex)|"<span aria-hidden=\"[^"]*\">(.+?)<\/span>"}
subdetail_producer.modify  {substring(type=regex)|"<span aria-hidden=\"[^"]*\">(.+?)<\/span>"}
subdetail_actor.modify     {substring(type=regex)|"<span aria-hidden=\"[^"]*\">(.+?)<\/div>"}
subdetail_actor.modify     {replace(type=regex)|".+?(</span><span[^>]+>)"|(role=}
subdetail_actor.modify     {replace(type=regex)|"\s*</span>.*$"|)}
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index                {url|https://www.directv.com/guide?lpos=Header:1}
*index_site_id.scrub      {regex||"chNum":(\d{1,4})(?:,"\|\})||}
*index_site_channel.scrub {regex||"chName":"(.+?)","||}
*index_temp_8.scrub       {regex||"chCall":"(.+?)","||}
*index_temp_9.scrub       {regex||"chId":(\d+),"||}
*scope.range              {(channellist)|end}
**** add channel id to index_site_id
*index_temp_1.modify      {set|0}
*loop                     {(each "index_temp_2" in 'index_site_id')|end}
*index_temp_3.modify      {substring(type=element)|'index_temp_9' 'index_temp_1' 1} * chId
*index_temp_4.modify      {addend|'index_temp_2'#_#'index_temp_3'####}
*index_temp_1.modify      {calculate(format=F0)|1+}
*end_loop
*index_site_id.modify     {set|'index_temp_4'}
*index_site_id.modify     {replace|####|\|}
**** add channel call to index_site_channel
*index_temp_1.modify      {set|0}
*index_temp_4.modify      {clear}
*loop                     {(each "index_temp_2" in 'index_site_channel')|end}
*index_temp_3.modify      {substring(type=element)|'index_temp_8' 'index_temp_1' 1} * chCall
*index_temp_4.modify      {addend|'index_temp_2' ('index_temp_3')####}
*index_temp_1.modify      {calculate(format=F0)|1+}
*end_loop
*index_site_channel.modify{set|'index_temp_4'}
*index_site_channel.modify{replace|####|\|}
*index_site_id.modify     {cleanup(removeduplicates link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
