**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: gatotv.com
* @MinSWversion: V3.3
* @Revision 9 - [30/03/2023] Blackbear199
*   - add director,disable titleoriginal
* @Revision 8 - [06/03/2023] Blackbear199
*   - showsplit fix
* @Revision 7 - [21/12/2020] Blackbear199
*   - site changes
* @Revision 6 - [20/05/2018] Blackbear199
*   - site changes
* @Revision 5 - [17/09/2017] Blackbear199
*   - start/stop time fix
* @Revision 4 - [25/07/2016] IvanRF
*   - date replace fix
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=gatotv.com|timezone=America/Mexico_City|maxdays=7|cultureinfo=es-MX|charset=UTF-8|titlematchfactor=90|allowlastdayoverflow|firstshow=1}
site {episodesystem=onscreen|ratingsystem=MX}

url_index              {url|https://www.gatotv.com/canal/|channel|/|urldate|}
url_index.headers      {customheader=Accept-Encoding=gzip,deflate,br}

urldate.format         {datestring|yyyy-MM-dd}

index_urlchannellogo   {url||<div class="div_MainPicture">|src="|"|</div>}

index_showsplit.scrub  {regex||<table class="tbl_EPG">(?:.*?)(?:<tr class="tbl_EPG_row[^"]*">(.*?)</tr>(?:.*?))*</table>||}
scope.range            {(splitindex)|end}
index_showsplit.modify {replace(type=regex)|"s*\!\?\?\!\s*"| }
index_showsplit.modify {replace|tbl_EPG_TimesColumnOutOfSchedule|tbl_EPG_TimesColumn}
index_showsplit.modify {cleanup(removeduplicates span=1)}
*index_showsplit.modify{(debug)}
end_scope

index_urlshow          {url||<a href="||"|"}
index_urlshow.headers  {customheader=Accept-Encoding=gzip,deflate,br}

index_start.scrub      {multi(includeblock=1)|class="tbl_EPG_TimesColumn">|">|</time>|</div>}
index_stop.scrub       {multi(includeblock=2)|class="tbl_EPG_TimesColumn">|">|</time>|</div>}

index_title.scrub      {single|<div class="div_program_title_on_channel">||</div>|</div>}
index_episode.scrub    {single(pattern="Temporada 'S1' Episodio 'E1'""Temporada 'S1'""Episodio 'E1'")|<div class="div_episode|<strong>|</strong>|</div>}
index_subtitle.scrub   {multi(excludeblock="<strong>" exclude="Episodio")|<div class="div_episode|">|</div>|</div>}
index_showicon.scrub   {single|<img src="||"|"}
index_temp_1.scrub     {multi(excludeblock="<strong>" include="Episodio")|<div class="div_episode|">|</div>|</div>}

index_title.modify     {cleanup(tags="<"">")}
index_subtitle.modify  {cleanup}
index_subtitle.modify  {remove(type=regex)|"^\s*,\s*"}
index_episode.modify   {addend('index_temp_1' not "")| 'index_temp_1'}

title.scrub            {single|itemprop="name">||</h1>|</h1>}
*titleoriginal.scrub    {single|<strong>Título en Idioma Original:|nowrap" >|</span>|</table>}
description.scrub      {single|Sinopsis</span></h2>|">|</div>|</div>}
category.scrub         {multi|<span itemprop="genre"|nowrap" >|</span></a>|</table>}
category.scrub         {multi|<strong>Tipo:|nowrap" >|</span>|</table>}
director.scrub         {multi(max=2)|itemprop="director"|nowrap" >|</span>|</table>}
actor.scrub            {multi(max=8)|itemprop="actors"|itemprop="name">|</span></span>|<span class="}
producer.scrub         {multi(max=2)|itemprop="producer"|nowrap" >|</span>|</table>}
composer.scrub         {multi(max=2)|<strong>Música:|nowrap" >|</span>|</table>}
writer.scrub           {multi(max=2)|<strong>Creado Por:|nowrap" >|</span>|</table>}
rating.scrub           {single|<strong>Clasificación:|nowrap" >|</span>|</table>}
starrating.scrub       {single|<meta itemprop="ratingValue" content="||" />|" />}
productiondate.scrub   {single|Año:|nowrap" >|</span></a>|</table>}
country.scrub          {single|Paises de Origen:|nowrap" >|</span></a>|</table>}
*
titleoriginal.modify   {clear('title')}
titleoriginal.modify   {addend(not "")|(lang=en)}
description.modify     {cleanup(tags="<"">")}
starrating.modify      {calculate(not "" format=F1)}
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index                {url|http://www.gatotv.com/guia_tv/completa}
*index_site_id.scrub      {regex||class=\"\s*tbl_EPG_row[^>]*>(.*?)</tr>||}
*scope.range              {(channellist)|end}
*index_site_channel.modify{addstart|'index_site_id'}
*index_site_id.modify     {substring(type=regex)|<a [^>]*.*?href=\"([^\"]*)\"[^>]*title=\"[^\"]*\"[^>]*>}
*index_site_id.modify     {remove|https://www.gatotv.com/canal/}
*index_site_channel.modify{substring(type=regex)|<a [^>]*.*?href=\"[^\"]*\"[^>]*title=\"([^\"]*)\"[^>]*>}
*index_site_id.modify     {cleanup(removeduplicates link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
