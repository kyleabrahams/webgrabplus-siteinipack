**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: tv.nu
* @MinSWversion: V3.3
* @Revision 17 - [04/03/2023]  Blackbear199
*	 showsplit fix,urlshow fix for sports
* @Revision 16 - [21/08/2022]  Mat8861*fix urlshow
* @Revision 15 - [18/08/2022]  Blackbear199
*	 cvhannel creation,actor fix
* @Revision 14 - [09/09/2020]  Blackbear199
*	site changes
* @Revision 13 - [26/01/2019]  Blackbear199
*	showsplit,index_urlshow fix
* @Revision 12 - [16/01/2019]  Blackbear199
*	rewrite
* @Revision 11 - [07/01/2018]  Blackbear199
*	add subdetails page(easier element scrub)
* @Revision 10 - [06/10/2017]  Blackbear199
*	channels xml creation fix
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=tv.nu|timezone=UTC|maxdays=8|cultureinfo=sv-SE|charset=UTF-8|titlematchfactor=0|allowlastdayoverflow}
site {ratingsystem=Imdb|episodesystem=onscreen}
*
url_index                 {url|https://web-api.tv.nu/channels/|channel|/schedule?date=|urldate|&fullDay=true}
url_index.headers         {customheader=Accept-Encoding=gzip,deflate,br}
*
urldate.format            {datestring|yyyy-MM-dd}
*
index_urlchannellogo.scrub{regex||^.*?themedLogo":\{"light":\{"url":"([^"]*)"||}
*
index_showsplit.scrub     {regex||"broadcasts":\[(.*?)\],"channelPlayProvider":||}
index_showsplit.modify    {replace|\},\{"type":|\}\|\{"type":}
*index_showsplit.modify   {(debug)}
*
index_start.scrub         {single|"startTime":||,|,}
index_stop.scrub          {single|"endTime":||,|,}
index_title.scrub         {single|"title":"||",|",}
index_description.scrub   {single|"description":"||",|",}
index_category.scrub      {single(separator="","")|"genres":["||"]|"]}
index_category.scrub      {single(include="true")|"isMovie":||,|,}
index_productiondate.scrub{single|"year":||,|,}
index_rating.scrub        {single|"imdb":{"rating":"||",|",}
index_showicon.scrub      {single|"imageLandscape":"||",|",}
index_temp_1.scrub        {regex||"type":"([^"]*","id":"[^"]*)"||}
index_temp_2.scrub        {single|"broadcastId":"||"|"} *sports(C More Live,ect)
*
index_temp_1.modify       {replace|","id":"|/}
if                        {('index_temp_2' "")|end}
index_temp_1.modify       {addend|?compact=true}
else
index_temp_1.modify       {addend|?broadcastId='index_temp_2'&compact=true}
end_if
index_description.modify  {remove('index_urlshow' not "")|'index_description'}
index_category.modify     {replace|true|Movie}
*
index_urlshow.modify      {addstart|https://web-api.tv.nu/details/'index_temp_1'}
index_urlshow.headers     {customheader=Accept-Encoding=gzip,deflate,br}
*
subtitle.scrub            {single|"title":"||",|",}
description.scrub         {single|"description":"||",|",}
director.scrub            {regex||\{"name":"([^"]*)","slug":"[^"]*","role":"Regissör","image":"[^"]*"\}||}
actor.scrub               {regex||\{("name":"[^"]*","slug":"[^"]*","role":"(?:Röst\|Gäst\|Skådespelare\|Gäststjärna)","image":"[^"]*"(?:,"characterName":"[^"]*")?)\}||}
producer.scrub            {regex||\{"name":"([^"]*)","slug":"[^"]*","role":"(?:Producent\|Exekutiv producent)","image":"[^"]*"\}||}
writer.scrub              {regex||\{"name":"([^"]*)","slug":"[^"]*","role":"(?:Screenwriter\|Författare\|Writer)","image":"[^"]*"\}||}
composer.scrub            {regex||\{"name":"([^"]*)","slug":"[^"]*","role":"Originalmusik","image":"[^"]*"\}||}
episode.scrub             {regex(pattern="S'S1'E'E1'/'Et1'""S'S1'E'E1'""S'S1'""E'E1'")||"episodeId":"\d*","episodeNumber":([1-9]\d*),"seasonNumber":\d+||}
temp_1.scrub              {regex||^.*?"totalEpisodes":([1-9]\d*)||}
temp_2.scrub              {regex||"episodeId":"\d*","episodeNumber":\d+,"seasonNumber":([1-9]\d*)||}
country.scrub             {single(separator="","")|"countries":["||"]|"]}
*
title.modify              {addstart|'index_title'}
subtitle.modify           {clear('title')}
episode.modify            {addstart(not "")|E}
episode.modify            {addend('temp_1' not "")|/'temp_1'}
episode.modify            {addstart('temp_2' not "")|S'temp_2'}
if                        {('actor' not "")|end}
loop                      {(each "temp_9" in 'actor')|end}
temp_8.modify             {substring(type=regex)|'temp_9' "\"name\":\"(.*?)\",\""}
temp_7.modify             {substring(type=regex)|'temp_9' "\"characterName\":\"(.*?)\"$"}
temp_8.modify             {addend('temp_7' not "")|(role='temp_7')}
temp_6.modify             {addend|'temp_8'#_#}
end_loop
actor.modify              {substring(type=regex)|'temp_6' "(.*?)#_#"}
actor.modify              {substring(type=element)|0 8}
end_if
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index               {url|https://www.tv.nu/sitemap}
*index_site_id.scrub     {multi|\"slug\":\"kanaler\",\"urls\":[|\"url\":\"\\u002Fkanal\\u002F|\",|]}
*index_site_channel.scrub{multi|\"slug\":\"kanaler\",\"urls\":[|\"title\":\"|\"|]}
*index_site_id.modify    {cleanup(removeduplicates=equal,100 link="index_site_channel")}
** @auto_xml_channel_end
