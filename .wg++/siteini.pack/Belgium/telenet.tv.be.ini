**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: telenet.tv
* @MinSWversion: V3.1
* @Revision 8 - [16/03/2023] Blackbear199
*  showsplit fix
* @Revision 7 - [10/03/2023] Blackbear199
*  add - use custom postcode for locals
* @Revision 6 - [28/01/2023] Blackbear199
*  rewrite,site name changed from yelotv.be to telenet.tv
* @Revision 5 - [23/02/2019] Blackbear199
*  url change
* @Revision 4 - [06/01/2018] Blackbear199
* add channel logo
* @Revision 3 - [29/11/2016] Blackbear199
* rewrite
* @Revision 2 - [19/11/2013] Francis De Paemeleere
* adjust to site changes
* @Revision 1 - [16/11/2013] Francis De Paemeleere
* add sorting of shows (sometimes shows were not chronological ordered)
* @Revision 0 - [06/08/2013] Francis De Paemeleere
* - creation
* @Remarks: Channel List Creation
*           1.Add your postcode to the site_id="xxxx" to get local channels
*             Some Valid Postcodes
*             ================
*             2000 = Antwerpen
*             2800 = Mechelen
*             9100 = Sint Niklaas
*             3500 = Hasselt
*             9000 = Gent
*             8000 = Brussels
*             xxxx = any 4 digit postcode
*             ================
*             If no channel list is created or is empty then the postcode is invalid.
*             Examples
*             <update>c1-antwerpen</update>
*             <channel update="i" site="telenet.tv.be" site_id="2000" xmltv_id="dummy">dummy</channel>
*             or
*             <update>c1-mechelen</update>
*             <channel update="i" site="telenet.tv.be" site_id="2800" xmltv_id="dummy">dummy</channel>
* @header_end
**------------------------------------------------------------------------------------------------
site {url=telenet.tv.be|timezone=UTC|maxdays=14|cultureinfo=nl-BE|charset=UTF-8|titlematchfactor=90|keepindexpage}
site {ratingsystem=BE|episodesystem=onscreen}
*
url_index                  {url|https://static.spark.telenet.tv/eng/web/epg-service-lite/be/en/events/segments/|urldate||subpage|0000}
url_index.headers          {customheader=Accept-Encoding=gzip,deflate,br}
*
urldate.format             {datestring|yyyyMMdd}
subpage.format             {list|00|06|12|18}
*
index_urlchannellogo.modify{substring(type=regex)|'config_site_id' "##(.*)$"}
index_urlchannellogo.modify{set|https://staticqbr-be-prod.tnprod.cdn.dmdsdp.com/image-service/ImagesEPG/EventImages/'index_urlchannellogo'.png}
*
global_temp_1.modify       {substring(type=regex)|'config_site_id' "^([^#]*)##"}
index_showsplit.scrub      {multi|{"channelId":"'global_temp_1'","events":[||]}|]}}
scope.range                {(splitindex)|end}
index_showsplit.modify     {replace(type=regex)|"\!\?\?\!"|-}
index_showsplit.modify     {replace|\},\{"audioLanguages"|\}\|\{"audioLanguages"}
index_temp_1.modify        {substring(type=regex)|'index_showsplit' "\"startTime\":(\d+),"}
index_temp_1.modify        {cleanup(removeduplicates link="index_showsplit")}
*index_showsplit.modify    {(debug)}
end_scope
*
index_urlshow              {url|https://prod.spark.telenet.tv/eng/web/linear-service/v2/replayEvent/|"id":"||"|"}
index_urlshow.modify       {addend(not "")|?returnLinearContent=true&language=en}
index_urlshow.headers      {customheader=Accept-Encoding=gzip,deflate,br}
*
index_start.scrub          {single|"startTime":||,|,}
index_stop.scrub           {single|"endTime":||,|,}
index_title.scrub          {single|"title":"||"|"}
*
title.scrub                {single|,"title":"||",|",}
subtitle.scrub             {single|"episodeName":"||",|",}
description.scrub          {single|"longDescription":"||",|",}
category.scrub             {single(separator="","")|"genres":["||"]|"]}
director.scrub             {single(separator="","" max=2)|"directors":["||"]|"]}
actor.scrub                {single(separator="","" max=6)|"actors":["||"]|"]}
producer.scrub             {single(separator="","" max=2)|"producers":["||"]|"]}
productiondate.scrub       {single|"productionDate":"||"|"}
country.scrub              {single|"countryOfOrigin":"||"|"}
episode.scrub              {regex(pattern=""seasonNumber":'S1',"episodeNumber":'E1'"""seasonNumber":'S1',"""episodeNumber":'E1'")||"seasonNumber":\d+,"episodeNumber":\d+||}
temp_1.scrub               {single|"imageVersion":"||"|"}
temp_2.scrub               {single|"eventId":"||"|"}
*
episode.modify             {remove|"season":0,}
episode.modify             {remove(type=regex)|"\"seasonNumber\":\d{4,},"}
episode.modify             {remove(type=regex)|"\"episodeNumber\":\d{4,}"}
showicon.modify            {set|https://staticqbr-be-prod.tnprod.cdn.dmdsdp.com/image-service/intent/'temp_2'/posterTile?imageVersion='temp_1'}
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index               {url|https://prod.spark.telenet.tv/eng/web/linear-service/v2/channels?cityId=|channel|1&language=en&productClass=Orion-DASH}
*index_site_id.scrub     {regex||\{"id":"(.*?)\.png"\}||}
*index_site_channel.scrub{multi|"name":"||",|",}
*scope.range             {(channellist)|end}
*index_site_id.modify    {replace(type=regex)|"^[^\"]*(.*\/)"|##}
*index_site_id.modify    {cleanup(removeduplicates link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
