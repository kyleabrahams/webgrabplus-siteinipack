**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: optussport.com.au
* @MinSWversion: 3.1
* @Revision 2 - [20/08/2021] Mat8861
* @Revision 1 - [19/03/2021] Mat8861
* @Revision 0 - [15/03/2019] Smacca
*  - creation
* @Remarks: nil
* @header_end
**------------------------------------------------------------------------------------------------
site {url=optussport.com.au|timezone=Australia/Sydney|maxdays=14.1|cultureinfo=en-AU|charset=UTF-8|titlematchfactor=90}
site {ratingsystem=AU|episodesystem=onscreen}
*
url_index{url|https://sport.optus.com.au/api/metadata/editorials/v2/home_live_matches/web}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
url_index.headers {accept=text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9}
*
index_variable_element.modify{set|'config_site_id'}
*
index_showsplit.scrub {multi(includeblock="id":"'index_variable_element'",")|","type":"||"supportsStartOver":}
index_showsplit.modify{remove(type=regex)|\!\?\?\!}
index_start.scrub {single|"broadcastStartTime":"||",}
*index_stop.scrub {single|"broadcastEndTime":"||"|,}
index_title.scrub {regex||"title":"([^"]*)","description"||}
index_subtitle.scrub {single|"categoryTitle":"||",|",}
index_temp_2.scrub {single|"homeTeam":{|"title":"|","|}}
index_temp_1.scrub {single|"awayTeam":{|"title":"|","|}}
index_subtitle.modify{addend(['index_temp_1' not ""] ['index_temp_2' not ""] &)| 'index_temp_2' - 'index_temp_1'}
index_description.scrub {single|"description":"||",|",}
index_description.modify {clear(= 'index_subtitle')}
index_showicon.scrub{single|"imageUrl":"||","}
index_episode.scrub{single(pattern="S'S1'")|"season":{|"title":"|","|}}
index_episode.modify{addstart(not"")|S}
*

** @auto_xml_channel_start
*url_index{url|https://sport.optus.com.au/api/metadata/editorials/v2/home_live_matches/web}
*index_site_channel.scrub {multi|"channel":{|"name":"|"|}}
*index_site_id.scrub {multi|"channel":{|"id":"|"|}}
*scope.range {(channellist)|end}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
